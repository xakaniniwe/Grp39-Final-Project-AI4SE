# -*- coding: utf-8 -*-
"""train_model.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1uMCFv2j9L08OvKzKCdsq-bN7cZuHCZla
"""

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestRegressor
import joblib

# Load data
df = pd.read_csv('student-mat.csv', sep=';')

# Select features
features = ['studytime', 'failures', 'absences', 'schoolsup', 'famsup', 'goout', 'G3']
df = df[features]

# Encode yes/no
df['schoolsup'] = df['schoolsup'].map({'yes': 1, 'no': 0})
df['famsup'] = df['famsup'].map({'yes': 1, 'no': 0})

# Define X and y
X = df.drop('G3', axis=1)
y = df['G3']

# Split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train model
model = RandomForestRegressor(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

# Evaluate
score = model.score(X_test, y_test)
print(f"Model R^2 Score on Test Set: {score:.2f}")

# Save model
joblib.dump(model, 'student_grade_model.pkl')
print("Model saved as student_grade_model.pkl")

# prompt: download model

from google.colab import files

files.download('student_grade_model.pkl')